{"version":3,"sources":["api-routes.js","constants.js","components/Loader.js","components/EditItem.js","components/DelItem.js","components/Items.js","components/CreateItem.js","App.js","reportWebVitals.js","index.js"],"names":["API_ROUTES","ITEM","CREATE","DELETE","READ","ROOT","UPDATE","Loader","classes","className","color","Modal","setAppElement","modalEditItemStyles","content","top","left","right","bottom","marginRight","transform","EditItem","editItemModalOpen","handleEditModalClose","itemEditing","setItemEditingName","handleEditSubmit","isOpen","onRequestClose","style","contentLabel","name","htmlFor","minLength","maxLength","type","value","onChange","e","target","onClick","size","icon","faCheckCircle","modalDelItemStyles","width","DelItem","delItemModalOpen","handleDeleteModalClose","itemDeleting","handleDelSubmit","setDeleteChoice","id","a","Items","items","setItems","broadcastChannel","useState","setEditItemModalOpen","setDelItemModalOpen","deleteChoice","setItemEditing","setItemDeleting","name_slug","axios","patch","replace","res","data","key","newData","postMessage","console","log","alert","JSON","stringify","response","delete","status","filter","slug","map","faTrashAlt","faPencilAlt","item","styles","nameInputStyles","border","CreateItem","setName","handleItemSubmit","faPlus","App","setData","loading","setLoading","bc","BroadcastChannel","onmessage","event","useEffect","get","fetchData","preventDefault","post","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f711794.chunk.js","sourcesContent":["import { APP_URL } from './constants';\n\nconst API_ROUTES = {\n    ITEM: {\n        CREATE: `/items`,\n        DELETE: `/items/:slug`,\n        READ: `/items`,\n        ROOT: `${APP_URL}/api`,\n        UPDATE: `/items/:slug`,\n    },\n};\n\nexport default API_ROUTES;\n","\nexport const APP_URL = '';\n","import PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Loader = ({ classes }) => (\n    <div className={`${classes && typeof classes === 'string' ? classes : ''} loader`}>\n        <PulseLoader color='#008080' />\n    </div>\n);\n\nexport default Loader;\n","import Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nModal.setAppElement('#root');\n\n/** @const {object} modalEditItemStyles */\nconst modalEditItemStyles = {\n    content : {\n        top:'50%',\n        left:'50%',\n        right:'auto',\n        bottom:'auto',\n        marginRight:'-50%',\n        transform:'translate(-50%, -50%)'\n    }\n};\n\n/** @const {func} EditItem */\nconst EditItem = ({\n    editItemModalOpen,\n    handleEditModalClose,\n    itemEditing,\n    setItemEditingName,\n    handleEditSubmit,\n}) => (\n    <Modal\n        isOpen={editItemModalOpen}\n        onRequestClose={handleEditModalClose}\n        style={modalEditItemStyles}\n        contentLabel=\"Editing Item\"\n    >\n        <h2 className=\"text-center text-2xl\">Editing {itemEditing && itemEditing.name}</h2>\n        <hr />\n        <form className=\"pt-3 pb-5 max-w-md mx-auto\">\n            <div className=\"md:auto\">\n                <label \n                    htmlFor=\"name\"\n                    className=\"mt-2\"\n                >\n                    Name:\n                </label>\n                <input \n                    minLength={3}\n                    maxLength={20}\n                    name=\"name\" \n                    type=\"text\" \n                    className=\"rounded text-pink-500 ml-10\"\n                    value={itemEditing ? itemEditing.name : ''}\n                    onChange={e => setItemEditingName(e.target.value)}\n                />\n            </div>\n        </form>\n        <hr className=\"pt-5\" />\n        <div>\n            <button \n                className=\"close-modal-btn float-left\"\n                onClick={handleEditModalClose}\n            >\n                Close\n            </button>\n            <button \n                className='float-right'\n                onClick={handleEditSubmit}\n            >\n                <FontAwesomeIcon \n                    size=\"2x\" \n                    className=\"check-circle-icon\" \n                    icon={faCheckCircle} \n                />\n            </button>\n        </div>\n    </Modal>\n);\n\nexport default EditItem;\n","import Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nModal.setAppElement('#root');\n\n/** @const {object} modalDelItemStyles */\nconst modalDelItemStyles = {\n    content : {\n        width: 460,\n        top:'50%',\n        left:'50%',\n        right:'auto',\n        bottom:'auto',\n        marginRight:'-50%',\n        transform:'translate(-50%, -50%)'\n    }\n};\n\n/** @const {func} DelItem */\nconst DelItem = ({\n    delItemModalOpen,\n    handleDeleteModalClose,\n    itemDeleting,\n    handleDelSubmit,\n    setDeleteChoice,\n}) => (\n    <Modal\n        isOpen={delItemModalOpen}\n        onRequestClose={handleDeleteModalClose}\n        style={modalDelItemStyles}\n        contentLabel=\"Deleting Item\"\n    >\n        <h2 className=\"text-center text-2xl\">Deleting {itemDeleting && itemDeleting.name}</h2>\n        <hr />\n        <form className=\"pt-3 pb-5 max-w-md mx-auto\">\n            <div className=\"flex-auto\">\n                <label \n                    htmlFor=\"name\"\n                    className=\"mt-2\"\n                >\n                    Are you sure you want to delete this item?\n                </label>\n                <input \n                    onChange={e => setDeleteChoice(e.target.value)}\n                    value=\"y\"\n                    className=\"ml-5\" \n                    type=\"radio\" \n                    id=\"yes\" \n                    name=\"choice\" \n                />\n                <label htmlFor=\"yes\">Yes</label>\n                <input \n                    onChange={e => setDeleteChoice(e.target.value)}\n                    value=\"n\"\n                    className=\"ml-5\" \n                    type=\"radio\" \n                    id=\"no\" \n                    name=\"choice\" \n                />\n                <label htmlFor=\"no\">No</label>\n            </div>\n        </form>\n        <hr className=\"pt-5\" />\n        <div>\n            <button \n                className=\"close-modal-btn float-left\"\n                onClick={handleDeleteModalClose}\n            >\n                Close\n            </button>\n            <button \n                className='float-right'\n                onClick={async () => handleDelSubmit()}\n            >\n                <FontAwesomeIcon \n                    size=\"2x\" \n                    className=\"check-circle-icon\" \n                    icon={faCheckCircle} \n                />\n            </button>\n        </div>\n    </Modal>\n);\n\nexport default DelItem;\n","import { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n    faTrashAlt, \n    faPencilAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport API_ROUTES from '../api-routes';\nimport EditItem from './EditItem';\nimport DelItem from './DelItem';\n\n/** @const {func} Items */\nconst Items = ({ \n    items, \n    setItems, \n    broadcastChannel, \n}) => {\n    const [editItemModalOpen, setEditItemModalOpen] = useState(false);\n    const [delItemModalOpen, setDelItemModalOpen] = useState(false);\n    const [deleteChoice, setDeleteChoice] = useState(\"n\");\n    const [itemEditing, setItemEditing] = useState(null);\n    const [itemDeleting, setItemDeleting] = useState(null);\n\n    /** \n    * @const {func} setItemEditingName \n    * @param {string} name\n    */\n    const setItemEditingName = name => {\n        setItemEditing({\n            name,\n            name_slug: itemEditing.name_slug,\n        });\n    }\n\n    /** \n    * @const {func} handleDeleteItem \n    * @param {item} item\n    */\n    const handleDeleteItem = item => {\n        setItemDeleting(item);\n        setDelItemModalOpen(true);\n    }\n\n    /** \n    * @const {func} handleEditItem \n    * @param {item} item\n    */\n    const handleEditItem = item => {\n        setEditItemModalOpen(true);\n        setItemEditing(item);\n    }\n\n    /** \n     * @async\n     * @const {func} handleEditSubmit \n     */\n    const handleEditSubmit = async () => {\n        const { name, name_slug } = itemEditing;\n        try {\n            const res = await axios.patch(\n                `${API_ROUTES.ITEM.ROOT}${API_ROUTES.ITEM.UPDATE.replace(':slug', name_slug)}`,\n                { name }\n            );\n            setItems(data => {                \n                for(const key in data) {\n                    if (name_slug === data[key].name_slug) {\n                        data[key].name_slug = res.data.name_slug;\n                        data[key].name = res.data.name;\n                    }\n                }\n                const newData = [ ...data ];\n                broadcastChannel.postMessage(newData);\n                return newData;\n            });\n            setEditItemModalOpen(false);\n            setItemEditing(null);\n        } catch (err) {\n            console.log(err);\n            alert(JSON.stringify(err.response.data));\n            setEditItemModalOpen(false);\n            setItemEditing(null);\n            return;\n        }\n    }\n\n    /** \n     * @async\n     * @const {func} handleDelSubmit \n     */\n    const handleDelSubmit = async () => {\n        if (deleteChoice !== \"y\") {\n            setItemDeleting(null);\n            setDelItemModalOpen(false);\n            return;\n        }\n\n        const { name_slug } = itemDeleting;\n        try {\n            const res = await axios.delete(\n                `${API_ROUTES.ITEM.ROOT}${API_ROUTES.ITEM.DELETE.replace(':slug', name_slug)}`\n            );\n            if (res.status !== 200) {\n                alert(JSON.stringify(res.data));\n                setEditItemModalOpen(false);\n                setItemEditing(null);\n                return;\n            }\n            setItems(data => {\n                const newData = data.filter(({ name_slug: slug }) => {\n                    if (name_slug === slug) {\n                        return false;\n                    }\n                    return true;\n                });\n                broadcastChannel.postMessage(newData);\n                return newData;\n            });\n            setItemDeleting(null);\n            setDelItemModalOpen(false);\n        } catch (err) {\n            console.log(err);\n            alert(JSON.stringify(err.response.data));\n            setEditItemModalOpen(false);\n            setItemEditing(null);\n            return;\n        }\n    }\n\n    /** @const {func} handleEditModalClose */\n    const handleEditModalClose = () => {\n        setEditItemModalOpen(false);\n        setItemEditing(null);\n    }\n\n    /** @const {func} handleDeleteModalClose */\n    const handleDeleteModalClose = () => {\n        setEditItemModalOpen(false);\n        setDelItemModalOpen(null);\n        setDeleteChoice(\"n\");\n    }\n    \n    return (\n        <div id=\"item-container\" className=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n            {items.map(({name, name_slug}) => (\n                    <div key={name_slug} className=\"p-8\">\n                        <div \n                            className=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold grid grid-cols-10\"\n                        >\n                            <div className=\"col-span-9\">{name}</div>\n                            <div className=\"col-end\">\n                                <button>\n                                    <FontAwesomeIcon \n                                        size=\"2x\" \n                                        className=\"trash-alt-icon\" \n                                        icon={faTrashAlt} \n                                        onClick={() => handleDeleteItem({name, name_slug})}\n                                    />\n                                </button>\n                                <button className=\"ml-2\">\n                                    <FontAwesomeIcon \n                                        size=\"2x\" \n                                        className=\"pencil-alt-icon\" \n                                        icon={faPencilAlt} \n                                        onClick={() => handleEditItem({name, name_slug})}\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                </div>\n            ))}\n            <EditItem \n                editItemModalOpen={editItemModalOpen}\n                handleEditModalClose={handleEditModalClose}\n                itemEditing={itemEditing}\n                setItemEditingName={setItemEditingName}\n                handleEditSubmit={handleEditSubmit}\n            />\n            <DelItem\n                delItemModalOpen={delItemModalOpen}\n                handleDeleteModalClose={handleDeleteModalClose}\n                itemDeleting={itemDeleting}\n                handleDelSubmit={handleDelSubmit}\n                setDeleteChoice={setDeleteChoice}\n            />\n        </div>\n    );\n};\n\nexport default Items;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst CreateItem = ({\n    name,\n    setName,\n    handleItemSubmit,\n}) => (\n    <form className=\"max-w-md mx-auto\">\n        <div className=\"md:flex\">\n            <label\n                htmlFor=\"name\"\n                className=\"mt-2\"\n            >\n                Name:\n            </label>\n            <input\n                minLength={3}\n                maxLength={20}\n                name=\"name\"\n                type=\"text\"\n                className=\"rounded text-pink-500 ml-10\"\n                onChange={e => setName(e.target.value)}\n                value={name}\n                style={styles.nameInputStyles}\n            />\n            <button\n                className='ml-10'\n                onClick={async e => await handleItemSubmit(e)}\n            >\n                <FontAwesomeIcon size=\"2x\" className=\"plus-icon\" icon={faPlus} />\n            </button>\n        </div>\n    </form>\n);\n\nconst styles = {\n    nameInputStyles: {\n        border: '1px solid black',\n    },\n};\n\nexport default CreateItem;\n","import { \n    Fragment,\n    useState,\n    useEffect,\n} from 'react';\nimport axios from 'axios';\n\nimport API_ROUTES from './api-routes';\nimport Loader from './components/Loader';\nimport Items from './components/Items';\nimport CreateItem from './components/CreateItem';\n\n/** @func App */\nfunction App() {\n    const [data, setData] = useState(null);\n    const [name, setName] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    /** \n     * @const {BroadcastChannel} bc\n     * @param {MessageEvent} event\n     */\n    const bc = new BroadcastChannel('test_channel');\n    bc.onmessage = function (event) { \n        setData(event.data);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const res = await axios.get(\n                    `${API_ROUTES.ITEM.ROOT}${API_ROUTES.ITEM.READ}`\n                )\n                setData(res.data);\n                setLoading(false);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        fetchData();\n    }, []);\n    \n    /** \n    * @const handleItemSubmit \n    * @param {event} e\n    */\n    const handleItemSubmit = async e => {\n        e.preventDefault();\n        try {\n            const res = await axios.post(\n                `${API_ROUTES.ITEM.ROOT}${API_ROUTES.ITEM.CREATE}`,\n                { name }\n            );\n            setData(data => {\n                const newData = [ ...data, res.data ];\n                bc.postMessage(newData);\n                return newData;\n            });\n            setName(\"\");\n        } catch (err) {\n            console.log(err);\n            alert(JSON.stringify(err.response.data));\n            setName(\"\");\n        }\n    }\n\n    /** \n     * r e n d e r    a p p\n     */\n\n    if (true === loading) {\n        return <Loader />;\n    }\n\n    return (\n        <Fragment>\n            <CreateItem\n                name={name}\n                setName={setName}\n                handleItemSubmit={handleItemSubmit}\n            />\n            <Items \n                items={data} \n                setItems={setData}\n                broadcastChannel={bc} \n            />\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}